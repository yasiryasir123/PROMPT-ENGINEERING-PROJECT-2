import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  ScrollView,
  SafeAreaView,
} from 'react-native';

export default function App() {
  const [screen, setScreen] = useState('intro'); // intro, calculator, result
  const [deviceName, setDeviceName] = useState('');
  const [powerUsage, setPowerUsage] = useState('');
  const [hoursUsed, setHoursUsed] = useState('');
  const [outputEnergy, setOutputEnergy] = useState('');
  const [efficiency, setEfficiency] = useState(null);
  const [aiExplanation, setAiExplanation] = useState('');

  const generateSimulatedTips = (device) => {
    const deviceLower = device.toLowerCase();
    if (deviceLower.includes('fan')) {
      return `A fan usually converts electrical energy to kinetic energy.
â€¢ Clean blades regularly to reduce energy resistance.
â€¢ Use timers to limit unnecessary runtime.`;
    } else if (deviceLower.includes('fridge') || deviceLower.includes('refrigerator')) {
      return `Refrigerators consume power 24/7.
â€¢ Keep door seals tight and defrost periodically.
â€¢ Donâ€™t overload; allow proper air circulation.`;
    } else if (deviceLower.includes('ac') || deviceLower.includes('air conditioner')) {
      return `Air conditioners can be energy intensive.
â€¢ Clean or replace filters monthly.
â€¢ Set optimal temperature (24â€“26Â°C) for efficiency.`;
    } else if (deviceLower.includes('light')) {
      return `Lighting is more efficient with modern tech.
â€¢ Switch to LED bulbs.
â€¢ Turn off lights when not in use.`;
    } else {
      return `Energy efficiency can be improved with care.
â€¢ Turn off the device when not in use.
â€¢ Ensure regular maintenance and avoid overuse.`;
    }
  };

  const calculateEfficiency = async () => {
    const power = parseFloat(powerUsage);
    const hours = parseFloat(hoursUsed);
    const input = power * hours;
    const output = parseFloat(outputEnergy);

    if (!isNaN(power) && !isNaN(hours) && !isNaN(output) && power > 0 && hours > 0 && output > 0) {
      const result = (output / input) * 100;
      setEfficiency(result.toFixed(2));

      const prompt = `Device: ${deviceName}, Input Energy: ${input}Wh, Output Energy: ${output}Wh, Efficiency: ${result.toFixed(2)}%. 
Give a short explanation and 2 energy-saving tips.`;

      try {
        const response = await fetch(
          'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyB1x2Oe4FQ5G7LmF9QW7NV0Mz5kL8Q2QhA', 
          {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              contents: [{ parts: [{ text: prompt }] }]
            })
          }
        );

        const data = await response.json();
        const reply = data?.candidates?.[0]?.content?.parts?.[0]?.text;

        if (reply) {
          setAiExplanation(reply);
        } else {
          setAiExplanation(generateSimulatedTips(deviceName));
        }
      } catch (error) {
        setAiExplanation(generateSimulatedTips(deviceName));
      }

      setScreen('result');
    } else {
      setEfficiency(null);
      setAiExplanation('Please enter valid numeric values.');
    }
  };

  const resetAll = () => {
    setDeviceName('');
    setPowerUsage('');
    setHoursUsed('');
    setOutputEnergy('');
    setEfficiency(null);
    setAiExplanation('');
    setTimeout(() => {
      setScreen('intro');
    }, 400);
  };

  if (screen === 'intro') {
    return (
      <SafeAreaView style={styles.screen}>
        <View style={styles.introContainer}>
          <Text style={styles.introTitle}>âš¡ Welcome!</Text>
          <Text style={styles.introText}>
            Use this app to <Text style={{ fontWeight: 'bold' }}>understand and calculate energy efficiency</Text> with AI explanations.
          </Text>
          <TouchableOpacity
            style={styles.getStartedButton}
            onPress={() => setScreen('calculator')}
          >
            <Text style={styles.getStartedText}>Get Started</Text>
          </TouchableOpacity>
        </View>
      </SafeAreaView>
    );
  }

  if (screen === 'calculator') {
    return (
      <SafeAreaView style={styles.screen}>
        <ScrollView contentContainerStyle={styles.container}>
          <Text style={styles.title}>âš¡ Energy Efficiency Calculator</Text>

          <Text style={styles.label}>Device Name:</Text>
          <TextInput
            style={styles.input}
            placeholder="Enter Device Name"
            value={deviceName}
            onChangeText={setDeviceName}
          />

          <Text style={styles.label}>Power Usage (Watts):</Text>
          <TextInput
            style={styles.input}
            keyboardType="numeric"
            placeholder="e.g. 100"
            value={powerUsage}
            onChangeText={setPowerUsage}
          />

          <Text style={styles.label}>Hours Used per Day:</Text>
          <TextInput
            style={styles.input}
            keyboardType="numeric"
            placeholder="e.g. 4"
            value={hoursUsed}
            onChangeText={setHoursUsed}
          />

          <Text style={styles.label}>Useful Output Energy (Wh):</Text>
          <TextInput
            style={styles.input}
            keyboardType="numeric"
            placeholder="e.g. 350"
            value={outputEnergy}
            onChangeText={setOutputEnergy}
          />

          <TouchableOpacity style={styles.button} onPress={calculateEfficiency}>
            <Text style={styles.buttonText}>CALCULATE EFFICIENCY</Text>
          </TouchableOpacity>
        </ScrollView>
      </SafeAreaView>
    );
  }

  if (screen === 'result') {
    return (
      <SafeAreaView style={styles.screen}>
        <ScrollView contentContainerStyle={styles.container}>
          <Text style={styles.title}>ðŸŽ‰ Result</Text>

          <View style={styles.resultBox}>
            <Text style={styles.result}>âš¡ Efficiency:</Text>
            <Text style={styles.explanation}>{efficiency}%</Text>

            <Text style={[styles.result, { marginTop: 20 }]}>ðŸ¤– AI Tips:</Text>
            <Text style={styles.explanation}>{aiExplanation}</Text>
          </View>

          <TouchableOpacity style={styles.button} onPress={resetAll}>
            <Text style={styles.buttonText}>Calculate Again</Text>
          </TouchableOpacity>
        </ScrollView>
      </SafeAreaView>
    );
  }
}

const styles = StyleSheet.create({
  screen: {
    flex: 1,
    backgroundColor: '#fffbea',
  },
  container: {
    paddingTop: 60,
    paddingBottom: 40,
    paddingHorizontal: 20,
    alignItems: 'center',
    backgroundColor: '#fef9e7',
  },
  introContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 30,
    backgroundColor: '#fff3cd',
  },
  introTitle: {
    fontSize: 36,
    fontWeight: 'bold',
    fontFamily: 'Courier New',
    marginBottom: 20,
  },
  introText: {
    fontSize: 20,
    textAlign: 'center',
    marginBottom: 30,
    fontFamily: 'Courier New',
  },
  getStartedButton: {
    backgroundColor: '#f4c542',
    paddingVertical: 14,
    paddingHorizontal: 30,
    borderRadius: 10,
  },
  getStartedText: {
    color: '#3a3000',
    fontSize: 20,
    fontWeight: 'bold',
    fontFamily: 'Courier New',
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    marginBottom: 30,
    fontFamily: 'Courier New',
    textAlign: 'center',
  },
  label: {
    alignSelf: 'flex-start',
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 6,
    fontFamily: 'Courier New',
  },
  input: {
    height: 52,
    borderColor: '#bfae63',
    borderWidth: 1,
    borderRadius: 10,
    paddingHorizontal: 12,
    marginBottom: 20,
    width: '100%',
    fontSize: 18,
    backgroundColor: '#fff',
    fontFamily: 'Courier New',
  },
  button: {
    backgroundColor: '#f4c542',
    padding: 16,
    borderRadius: 10,
    marginTop: 20,
    width: '100%',
  },
  buttonText: {
    color: '#3a3000',
    fontSize: 20,
    fontWeight: 'bold',
    textAlign: 'center',
    fontFamily: 'Courier New',
  },
  resultBox: {
    backgroundColor: '#fffde7',
    borderRadius: 12,
    padding: 20,
    width: '100%',
    marginBottom: 20,
  },
  result: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 10,
    fontFamily: 'Courier New',
    color: '#333',
  },
  explanation: {
    fontSize: 18,
    fontFamily: 'Courier New',
    lineHeight: 24,
    color: '#222',
  },
});
